{
  "version": 3,
  "sources": ["../../src/index.js"],
  "sourcesContent": ["const DEFAULT_ANIMATION_DURATION = 300;\n\nconst parseOptions = options => ({\n  delay: options.delay ?? DEFAULT_ANIMATION_DURATION,\n  title: options.title ?? \"You need to add a data-title to the element\",\n  placement: options.placement ?? \"top\",\n});\n\nconst getRects = (hoverElement, tooltipElement) => ({\n  hoverElementRect: hoverElement.getBoundingClientRect(),\n  tooltipElementRect: tooltipElement.getBoundingClientRect(),\n});\n\nconst positionTop = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.top - tooltipElementRect.height - 10;\n  const left = hoverElementRect.left - (tooltipElementRect.width / 2 - hoverElementRect.width / 2);\n\n  if (top < 0) {\n    return positionBottom();\n  }\n\n  tooltipElement.classList.add(\"top\");\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst positionRight = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.top - (tooltipElementRect.height / 2 - hoverElementRect.height / 2);\n  const left = hoverElementRect.right + 10;\n\n  if (left + tooltipElementRect.width > window.innerWidth) {\n    return positionLeft();\n  }\n\n  tooltipElement.classList.add(\"right\");\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst positionBottom = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.bottom + 10;\n  const left = hoverElementRect.left - (tooltipElementRect.width / 2 - hoverElementRect.width / 2);\n\n  if (top + tooltipElementRect.height > window.innerHeight) {\n    return positionLeft();\n  }\n\n  tooltipElement.classList.add(\"bottom\");\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst positionLeft = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.top - (tooltipElementRect.height / 2 - hoverElementRect.height / 2);\n  const left = hoverElementRect.left - tooltipElementRect.width - 10;\n\n  if (left < 0) {\n    return positionRight();\n  }\n\n  tooltipElement.classList.add(\"left\");\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst place = (hoverElement, tooltipElement, placement = \"top\") => {\n  switch (placement) {\n    case \"left\":\n      return positionLeft(hoverElement, tooltipElement);\n    case \"right\":\n      return positionRight(hoverElement, tooltipElement);\n    case \"bottom\":\n      return positionBottom(hoverElement, tooltipElement);\n    case \"top\":\n    default:\n      return positionTop(hoverElement, tooltipElement);\n  }\n}\n\nconst isTouchDevice = () => 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n\nconst addTooltipToElement = element => {\n  const options = parseOptions(element.dataset);\n\n  const tooltip = document.createElement(\"div\");\n  tooltip.classList.add(\"minimal-tooltip\", options.placement);\n  tooltip.innerText = options.title;\n  tooltip.style.transitionDelay = `${options.delay}ms`;\n  document.body.appendChild(tooltip);\n\n  place(element, tooltip, options.placement);\n\n  return {\n    tooltip,\n    options,\n  };\n};\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  if (isTouchDevice()) {\n    return;\n  }\n\n  const elementsWithTooltips = document.querySelectorAll(\"*[data-title]\");\n\n  elementsWithTooltips.forEach((element) => {\n    element.style.position = \"relative\";\n    const { tooltip, options } = addTooltipToElement(element);\n\n    element.addEventListener(\"mouseenter\", () => {\n      tooltip.classList.add(\"visible\");\n      tooltip.style.animationDelay = `${options.delay}ms`;\n      tooltip.style.animationDuration = `${DEFAULT_ANIMATION_DURATION}ms`;\n    });\n\n    element.addEventListener(\"mouseleave\", () => {\n      tooltip.classList.remove(\"visible\");\n      tooltip.style.animationDelay = `${DEFAULT_ANIMATION_DURATION}ms`;\n      tooltip.style.animationDuration = `${DEFAULT_ANIMATION_DURATION}ms`;\n    });\n  });\n});\n"],
  "mappings": "MAEA,IAAMA,EAAeC,IAAY,CAC/B,MAAOA,EAAQ,OAAS,IACxB,MAAOA,EAAQ,OAAS,8CACxB,UAAWA,EAAQ,WAAa,KAClC,GAEMC,EAAW,CAACC,EAAcC,KAAoB,CAClD,iBAAkBD,EAAa,sBAAsB,EACrD,mBAAoBC,EAAe,sBAAsB,CAC3D,GAEMC,EAAc,CAACF,EAAcC,IAAmB,CACpD,GAAM,CAAE,iBAAAE,EAAkB,mBAAAC,CAAmB,EAAIL,EAASC,EAAcC,CAAc,EAChFI,EAAMF,EAAiB,IAAMC,EAAmB,OAAS,GACzDE,EAAOH,EAAiB,MAAQC,EAAmB,MAAQ,EAAID,EAAiB,MAAQ,GAE9F,GAAIE,EAAM,EACR,OAAOE,EAAe,EAGxBN,EAAe,UAAU,IAAI,KAAK,EAClCA,EAAe,MAAM,IAAM,GAAGI,CAAG,KACjCJ,EAAe,MAAM,KAAO,GAAGK,CAAI,IACrC,EAEME,EAAgB,CAACR,EAAcC,IAAmB,CACtD,GAAM,CAAE,iBAAAE,EAAkB,mBAAAC,CAAmB,EAAIL,EAASC,EAAcC,CAAc,EAChFI,EAAMF,EAAiB,KAAOC,EAAmB,OAAS,EAAID,EAAiB,OAAS,GACxFG,EAAOH,EAAiB,MAAQ,GAEtC,GAAIG,EAAOF,EAAmB,MAAQ,OAAO,WAC3C,OAAOK,EAAa,EAGtBR,EAAe,UAAU,IAAI,OAAO,EACpCA,EAAe,MAAM,IAAM,GAAGI,CAAG,KACjCJ,EAAe,MAAM,KAAO,GAAGK,CAAI,IACrC,EAEMC,EAAiB,CAACP,EAAcC,IAAmB,CACvD,GAAM,CAAE,iBAAAE,EAAkB,mBAAAC,CAAmB,EAAIL,EAASC,EAAcC,CAAc,EAChFI,EAAMF,EAAiB,OAAS,GAChCG,EAAOH,EAAiB,MAAQC,EAAmB,MAAQ,EAAID,EAAiB,MAAQ,GAE9F,GAAIE,EAAMD,EAAmB,OAAS,OAAO,YAC3C,OAAOK,EAAa,EAGtBR,EAAe,UAAU,IAAI,QAAQ,EACrCA,EAAe,MAAM,IAAM,GAAGI,CAAG,KACjCJ,EAAe,MAAM,KAAO,GAAGK,CAAI,IACrC,EAEMG,EAAe,CAACT,EAAcC,IAAmB,CACrD,GAAM,CAAE,iBAAAE,EAAkB,mBAAAC,CAAmB,EAAIL,EAASC,EAAcC,CAAc,EAChFI,EAAMF,EAAiB,KAAOC,EAAmB,OAAS,EAAID,EAAiB,OAAS,GACxFG,EAAOH,EAAiB,KAAOC,EAAmB,MAAQ,GAEhE,GAAIE,EAAO,EACT,OAAOE,EAAc,EAGvBP,EAAe,UAAU,IAAI,MAAM,EACnCA,EAAe,MAAM,IAAM,GAAGI,CAAG,KACjCJ,EAAe,MAAM,KAAO,GAAGK,CAAI,IACrC,EAEMI,EAAQ,CAACV,EAAcC,EAAgBU,EAAY,QAAU,CACjE,OAAQA,EAAW,CACjB,IAAK,OACH,OAAOF,EAAaT,EAAcC,CAAc,EAClD,IAAK,QACH,OAAOO,EAAcR,EAAcC,CAAc,EACnD,IAAK,SACH,OAAOM,EAAeP,EAAcC,CAAc,EACpD,IAAK,MACL,QACE,OAAOC,EAAYF,EAAcC,CAAc,CACnD,CACF,EAEMW,EAAgB,IAAM,iBAAkB,QAAU,UAAU,eAAiB,GAAK,UAAU,iBAAmB,EAE/GC,EAAsBC,GAAW,CACrC,IAAMhB,EAAUD,EAAaiB,EAAQ,OAAO,EAEtCC,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAU,IAAI,kBAAmBjB,EAAQ,SAAS,EAC1DiB,EAAQ,UAAYjB,EAAQ,MAC5BiB,EAAQ,MAAM,gBAAkB,GAAGjB,EAAQ,KAAK,KAChD,SAAS,KAAK,YAAYiB,CAAO,EAEjCL,EAAMI,EAASC,EAASjB,EAAQ,SAAS,EAElC,CACL,QAAAiB,EACA,QAAAjB,CACF,CACF,EAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,GAAIc,EAAc,EAChB,OAG2B,SAAS,iBAAiB,eAAe,EAEjD,QAASE,GAAY,CACxCA,EAAQ,MAAM,SAAW,WACzB,GAAM,CAAE,QAAAC,EAAS,QAAAjB,CAAQ,EAAIe,EAAoBC,CAAO,EAExDA,EAAQ,iBAAiB,aAAc,IAAM,CAC3CC,EAAQ,UAAU,IAAI,SAAS,EAC/BA,EAAQ,MAAM,eAAiB,GAAGjB,EAAQ,KAAK,KAC/CiB,EAAQ,MAAM,kBAAoB,OACpC,CAAC,EAEDD,EAAQ,iBAAiB,aAAc,IAAM,CAC3CC,EAAQ,UAAU,OAAO,SAAS,EAClCA,EAAQ,MAAM,eAAiB,QAC/BA,EAAQ,MAAM,kBAAoB,OACpC,CAAC,CACH,CAAC,CACH,CAAC",
  "names": ["parseOptions", "options", "getRects", "hoverElement", "tooltipElement", "positionTop", "hoverElementRect", "tooltipElementRect", "top", "left", "positionBottom", "positionRight", "positionLeft", "place", "placement", "isTouchDevice", "addTooltipToElement", "element", "tooltip"]
}
