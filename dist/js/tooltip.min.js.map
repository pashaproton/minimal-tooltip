{
  "version": 3,
  "sources": ["../../src/index.js"],
  "sourcesContent": ["const DEFAULT_TOOLTIP_SELECTOR = \"data-title\";\nconst DEFAULT_ANIMATION_DURATION = 300;\n\nconst tooltipPlacement = {\n  TOP: \"top\",\n  RIGHT: \"right\",\n  BOTTOM: \"bottom\",\n  LEFT: \"left\",\n};\n\nconst parseOptions = options => ({\n  delay: options.delay ?? DEFAULT_ANIMATION_DURATION,\n  title: options.title ?? `You need to add a ${DEFAULT_TOOLTIP_SELECTOR} to the element`,\n  placement: options.placement ?? tooltipPlacement.TOP,\n});\n\nconst getRects = (hoverElement, tooltipElement) => ({\n  hoverElementRect: hoverElement.getBoundingClientRect(),\n  tooltipElementRect: tooltipElement.getBoundingClientRect(),\n});\n\nconst positionTop = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.top - tooltipElementRect.height - 10;\n  const left = hoverElementRect.left - (tooltipElementRect.width / 2 - hoverElementRect.width / 2);\n\n  if (top < 0) {\n    return positionBottom();\n  }\n\n  tooltipElement.classList.add(tooltipPlacement.TOP);\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst positionRight = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.top - (tooltipElementRect.height / 2 - hoverElementRect.height / 2);\n  const left = hoverElementRect.right + 10;\n\n  if (left + tooltipElementRect.width > window.innerWidth) {\n    return positionLeft();\n  }\n\n  tooltipElement.classList.add(tooltipPlacement.RIGHT);\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst positionBottom = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.bottom + 10;\n  const left = hoverElementRect.left - (tooltipElementRect.width / 2 - hoverElementRect.width / 2);\n\n  if (top + tooltipElementRect.height > window.innerHeight) {\n    return positionLeft();\n  }\n\n  tooltipElement.classList.add(tooltipPlacement.BOTTOM);\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst positionLeft = (hoverElement, tooltipElement) => {\n  const { hoverElementRect, tooltipElementRect } = getRects(hoverElement, tooltipElement);\n  const top = hoverElementRect.top - (tooltipElementRect.height / 2 - hoverElementRect.height / 2);\n  const left = hoverElementRect.left - tooltipElementRect.width - 10;\n\n  if (left < 0) {\n    return positionRight();\n  }\n\n  tooltipElement.classList.add(tooltipPlacement.LEFT);\n  tooltipElement.style.top = `${top}px`;\n  tooltipElement.style.left = `${left}px`;\n}\n\nconst place = (hoverElement, tooltipElement, placement = tooltipPlacement.TOP) => {\n  switch (placement) {\n    case tooltipPlacement.LEFT:\n      return positionLeft(hoverElement, tooltipElement);\n    case tooltipPlacement.RIGHT:\n      return positionRight(hoverElement, tooltipElement);\n    case tooltipPlacement.BOTTOM:\n      return positionBottom(hoverElement, tooltipElement);\n    case tooltipPlacement.TOP:\n    default:\n      return positionTop(hoverElement, tooltipElement);\n  }\n}\n\nconst isTouchDevice = () => 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;\n\nconst addTooltipToElement = element => {\n  const options = parseOptions(element.dataset);\n\n  const tooltip = document.createElement(\"div\");\n  tooltip.classList.add(\"minimal-tooltip\", options.placement);\n  tooltip.innerText = options.title;\n  tooltip.style.transitionDelay = `${options.delay}ms`;\n  document.body.appendChild(tooltip);\n\n  place(element, tooltip, options.placement);\n\n  return {\n    tooltip,\n    options,\n  };\n};\n\nconst handleMouseEnter = (tooltip, options) => () => {\n  console.log(\"handleMouseEnter\");\n  tooltip.classList.add(\"visible\");\n  tooltip.style.animationDelay = `${options.delay}ms`;\n  tooltip.style.animationDuration = `${DEFAULT_ANIMATION_DURATION}ms`;\n};\n\nconst handleMouseLeave = tooltip => () => {\n  tooltip.classList.remove(\"visible\");\n  tooltip.style.animationDelay = `${DEFAULT_ANIMATION_DURATION}ms`;\n  tooltip.style.animationDuration = `${DEFAULT_ANIMATION_DURATION}ms`;\n};\n\nconst processTooltip = element => {\n  element.style.position = \"relative\";\n  const { tooltip, options } = addTooltipToElement(element);\n\n  element.addEventListener(\"mouseenter\", handleMouseEnter(tooltip, options));\n  element.addEventListener(\"mouseleave\", handleMouseLeave(tooltip));\n};\n\nconst observer = new MutationObserver(mutations => {\n  for (const mutation of mutations) {\n    if (mutation.type === 'childList') {\n      mutation.addedNodes.forEach(node => {\n        if (node.hasAttribute(`${DEFAULT_TOOLTIP_SELECTOR}`)) {\n          processTooltip(node);\n        }\n\n        node.querySelectorAll(`*[${DEFAULT_TOOLTIP_SELECTOR}]`).forEach(processTooltip);\n      });\n    }\n  }\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  if (isTouchDevice()) {\n    return;\n  }\n\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n  });\n\n  document.querySelectorAll(`*[${DEFAULT_TOOLTIP_SELECTOR}]`).forEach(processTooltip);\n});\n"],
  "mappings": "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",
  "names": ["DEFAULT_TOOLTIP_SELECTOR", "tooltipPlacement", "parseOptions", "options", "DEFAULT_TOOLTIP_SELECTOR", "getRects", "hoverElement", "tooltipElement", "positionTop", "hoverElementRect", "tooltipElementRect", "top", "left", "positionBottom", "positionRight", "positionLeft", "place", "placement", "isTouchDevice", "addTooltipToElement", "element", "tooltip", "handleMouseEnter", "handleMouseLeave", "processTooltip", "observer", "mutations", "mutation", "node"]
}
